name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: image

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
- name: Cache
  uses: actions/cache@v2.1.1
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    
  - name: Cache
  uses: actions/cache@v2.1.1
  with:
    # A list of files, directories, and wildcard patterns to cache and restore
    path: 
    # An explicit key for restoring and saving the cache
    key: 
    # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
    restore-keys: # optional
    - name: Setup Go environment
  uses: actions/setup-go@v2.1.2
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges.
    go-version: # optional
    # Whether to download only stable versions
    stable: # optional, default is true
    # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
    - name: Close Stale Issues
  uses: actions/stale@v3.0.10
  with:
    # Token for the repository. Can be passed in using `{{ secrets.GITHUB_TOKEN }}`.
    repo-token: 
    # The message to post on the issue when tagging it. If none provided, will not mark issues stale.
    stale-issue-message: # optional
    # The message to post on the pr when tagging it. If none provided, will not mark pull requests stale.
    stale-pr-message: # optional
    # The message to post on the issue when closing it. If none provided, will not comment when closing an issue.
    close-issue-message: # optional
    # The message to post on the pr when closing it. If none provided, will not comment when closing a pull requests.
    close-pr-message: # optional
    # The number of days old an issue can be before marking it stale. Set to -1 to never mark issues or pull requests as stale automatically.
    days-before-stale: # optional, default is 60
    # The number of days to wait to close an issue or pull request after it being marked stale. Set to -1 to never close stale issues.
    days-before-close: # optional, default is 7
    # The label to apply when an issue is stale.
    stale-issue-label: # optional, default is Stale
    # The labels to apply when an issue is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2")
    exempt-issue-labels: # optional, default is 
    # The label to apply when a pull request is stale.
    stale-pr-label: # optional, default is Stale
    # The labels to apply when a pull request is exempt from being marked stale. Separate multiple labels with commas (eg. "label1,label2")
    exempt-pr-labels: # optional, default is 
    # Only issues or pull requests with all of these labels are checked if stale. Defaults to `[]` (disabled) and can be a comma-separated list of labels.
    only-labels: # optional, default is 
    # The maximum number of operations per run, used to control rate limiting.
    operations-per-run: # optional, default is 30
    # Remove stale labels from issues when they are updated or commented on.
    remove-stale-when-updated: # optional, default is true
    # Run the processor in debug mode without actually performing any operations on live issues.
    debug-only: # optional
    # The order to get issues or pull requests. Defaults to false, which is descending
    ascending: # optional
    # Skip adding stale message when marking a pull request as stale.
    skip-stale-pr-message: # optional
    # Skip adding stale message when marking an issue as stale.
    skip-stale-issue-message: # optional
    - name: Setup Java JDK
  uses: actions/setup-java@v1.4.2
  with:
    # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
    java-version: 
    # The package type (jre, jdk, jdk+fx)
    java-package: # optional, default is jdk
    # The architecture (x86, x64) of the package.
    architecture: # optional, default is x64
    # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
    jdkFile: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    - name: Codefresh pipeline runner
  # You may pin to the exact commit or the version.
  # uses: codefresh-io/codefresh-pipeline-runner@b5538626a319e144287bddb0404a63d8547efd45
  uses: codefresh-io/codefresh-pipeline-runner@v5
  
  - name: Setup gcloud environment
  # You may pin to the exact commit or the version.
  # uses: GoogleCloudPlatform/github-actions@61938f87149d8a75fd3d7385a5081d8a4169156d
  uses: GoogleCloudPlatform/github-actions@0.1.2
  with:
    # The version of the gcloud SDK to be installed.  Example: 275.0.0
    version: # optional, default is 275.0.0
    # The service account email which will be used for authentication.
    service_account_email: # optional
    # The service account key which will be used for authentication.
    service_account_key: 
    - name: GitHub Action for Cloudflare Workers
  # You may pin to the exact commit or the version.
  # uses: cloudflare/serverless-action@4874454df30c51aa6dcc7d10b2e69e0f4fc5bc48
  uses: cloudflare/serverless-action@v1.1
  - name: Build and push Docker images
  # You may pin to the exact commit or the version.
  # uses: docker/build-push-action@92e71463491f2d026a477188b8ad3a0fdd9d672c
  uses: docker/build-push-action@v1.1.0
  with:
    # Username used to log in to a Docker registry. If not set then no login will occur
    username: # optional
    # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
    password: # optional
    # Server address of Docker registry. If not set then will default to Docker Hub
    registry: # optional
    # Docker repository to tag the image with
    repository: 
    # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
    tags: # optional
    # Automatically tags the built image with the git reference as per the readme
    tag_with_ref: # optional
    # Automatically tags the built image with the git short SHA as per the readme
    tag_with_sha: # optional
    # Path to the build context
    path: # optional, default is .
    # Path to the Dockerfile (Default is '{path}/Dockerfile')
    dockerfile: # optional
    # Sets the target stage to build
    target: # optional
    # Always attempt to pull a newer version of the image
    always_pull: # optional
    # Comma-delimited list of build-time variables
    build_args: # optional
    # Comma-delimited list of images to consider as cache sources
    cache_froms: # optional
    # Comma-delimited list of labels to add to the built image
    labels: # optional
    # Adds labels with git repository information to the built image
    add_git_labels: # optional
    # Whether to push the image
    push: # optional, default is true
    - name: ansible-lint
  # You may pin to the exact commit or the version.
  # uses: ansible/ansible-lint-action@38e9ebdc9c3c71e66e2a3e0a09f0b6c8bc005e46
  uses: ansible/ansible-lint-action@v4.1.0.post0
  
    
  
